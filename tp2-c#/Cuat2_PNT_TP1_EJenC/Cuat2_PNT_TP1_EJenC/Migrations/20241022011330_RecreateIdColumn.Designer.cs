// <auto-generated />
using Cuat2_PNT_TP1_EJenC.Conexion;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cuat2_PNT_TP1_EJenC.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20241022011330_RecreateIdColumn")]
    partial class RecreateIdColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Persona", b =>
                {
                    b.Property<long>("idPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("idPersona"));

                    b.Property<string>("dni")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idPersona");

                    b.ToTable("Personas", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Medico", b =>
                {
                    b.HasBaseType("Persona");

                    b.Property<int>("especialidad")
                        .HasColumnType("int");

                    b.ToTable("Medicos", (string)null);
                });

            modelBuilder.Entity("Paciente", b =>
                {
                    b.HasBaseType("Persona");

                    b.Property<string>("obraSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Pacientes", (string)null);
                });

            modelBuilder.Entity("Medico", b =>
                {
                    b.HasOne("Persona", null)
                        .WithOne()
                        .HasForeignKey("Medico", "idPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Paciente", b =>
                {
                    b.HasOne("Persona", null)
                        .WithOne()
                        .HasForeignKey("Paciente", "idPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
