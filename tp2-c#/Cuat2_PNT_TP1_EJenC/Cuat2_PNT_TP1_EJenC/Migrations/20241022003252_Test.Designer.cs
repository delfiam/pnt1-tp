// <auto-generated />
using Cuat2_PNT_TP1_EJenC.Conexion;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cuat2_PNT_TP1_EJenC.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20241022003252_Test")]
    partial class Test
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Persona", b =>
                {
                    b.Property<long>("idPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("idPersona"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("dni")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idPersona");

                    b.ToTable("Persona");

                    b.HasDiscriminator().HasValue("Persona");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Medico", b =>
                {
                    b.HasBaseType("Persona");

                    b.Property<int>("especialidad")
                        .HasColumnType("int")
                        .HasColumnName("Especialidad");

                    b.HasDiscriminator().HasValue("Medico");
                });

            modelBuilder.Entity("Paciente", b =>
                {
                    b.HasBaseType("Persona");

                    b.Property<int>("obraSocial")
                        .HasColumnType("int")
                        .HasColumnName("ObraSocial");

                    b.HasDiscriminator().HasValue("Paciente");
                });
#pragma warning restore 612, 618
        }
    }
}
